{"version":3,"file":"static/js/631.9e33c9cc.chunk.js","mappings":"mPA0EA,UAlEiB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdJ,GAAa,GAFC,UAGSK,EAAAA,EAAAA,IAAeX,GAHxB,gBAGNG,EAHM,EAGNA,KACRC,EAAQD,GACRG,GAAa,GALC,kDAOdE,EAAS,KAAMI,SAEfC,EAAAA,GAAAA,MAAY,gCAAZ,MATc,yBAWdP,GAAa,GAXC,6EAAH,qDAcfI,GACD,GAAE,CAACV,IAKJ,OACE,2BACGO,IACC,eAAGO,UAAU,eAAb,UAA4B,iCAA+BP,KAE5DF,IAAa,SAAC,IAAD,IACbF,IACC,iBAAKW,UAAWC,EAAAA,EAAAA,0BAAhB,WACE,eAAID,UAAWC,EAAAA,EAAAA,UAAf,SAA8B,UAC9B,eAAID,UAAWC,EAAAA,EAAAA,SAAf,SACGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,UAApC,OACR,gBAAaN,UAAWC,EAAAA,EAAAA,SAAxB,WACE,gBACED,UAAWC,EAAAA,EAAAA,QACXM,IACEF,EAAY,UACLG,EAAAA,IADK,OACYH,GAlBxC,iFAqBcI,IAAKL,KAEP,iBAAKJ,UAAWC,EAAAA,EAAAA,SAAhB,WACE,gBAAID,UAAWC,EAAAA,EAAAA,aAAf,WACE,0BAAM,YAAc,IAAEG,MAExB,gBAAIJ,UAAWC,EAAAA,EAAAA,SAAf,WACE,0BAAM,eAAiB,IAAEK,UAftBH,EADD,WA0BrB,C","sources":["pages/CastPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieCast } from 'services/api';\nimport { IMAGE_URL_W500 } from 'services/api';\nimport css from './Page.module.css';\nimport { Loader } from 'components/Loader';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n\n        toast.error('Error fetching movie details:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const defaultImg =\n    '<https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg>';\n\n  return (\n    <div>\n      {error && (\n        <p className=\"errorMessage\">Whoops, something went wrong: {error}</p>\n      )}\n      {isLoading && <Loader />}\n      {cast && (\n        <div className={css.castPageÐ¡ontainer}>\n          <h2 className={css.castTitle}>Cast</h2>\n          <ul className={css.castList}>\n            {cast.map(({ id, original_name, profile_path, character }) => (\n              <li key={id} className={css.castItem}>\n                <img\n                  className={css.castImg}\n                  src={\n                    profile_path\n                      ? `${IMAGE_URL_W500}${profile_path}`\n                      : defaultImg\n                  }\n                  alt={original_name}\n                />\n                <div className={css.castInfo}>\n                  <h3 className={css.castTextName}>\n                    <span> Actor:</span> {original_name}\n                  </h3>\n                  <h3 className={css.castText}>\n                    <span>Character:</span> {character}\n                  </h3>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CastPage;\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchCast","fetchMovieCast","message","toast","className","css","map","id","original_name","profile_path","character","src","IMAGE_URL_W500","alt"],"sourceRoot":""}